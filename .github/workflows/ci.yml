name: CI

on: [push, pull_request]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  NUGET_FEED: https://api.nuget.org/v3/index.json

jobs:
  build-dotnet:
    name: "Build and Test (dotnet)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore
  
      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal  --collect:"XPlat Code Coverage"

      - name: dotnet-coverage
        run: dotnet-coverage merge $GITHUB_WORKSPACE\TestResults\ -f cobertura -o $GITHUB_WORKSPACE/TestResults/report.cobertuera.xml

      - name: generate coverage report
        run: dotnet reportgenerator -reports:$GITHUB_WORKSPACE/TestResults/report.cobertuera.xml -targetdir:$GITHUB_WORKSPACE/coverage -reporttypes:MarkdownSummary 
        
      - name: Create check run with code coverage Markdown report
        uses: LouisBrunner/checks-action@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Code coverage
          conclusion: ${{ job.status }}
          output: '{"summary":"Code coverage"}'
          output_text_description_file: coverage/Summary.md

      - name: Pack
        run: dotnet pack --verbosity normal -c Release --no-restore --include-source --version-suffix alpha.${{ github.run_number }} -o ./dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs
          path: ./dist/*.*

  release:
    needs: build-dotnet
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Pack
        run: |
          VERSION="${{ github.ref_name }}"
          echo "Version: $VERSION"
          dotnet pack -c Release --include-source -p:Version=$VERSION -o ./dist src/TracesOnError/SSI.Extensions.Logging.TracesOnError.csproj

      - name: Push
        run: dotnet nuget push ./dist/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.*
